// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaskAPI.DatabaseAccess;

namespace TaskAPI.DatabaseAccess.Migrations
{
    [DbContext(typeof(TodoDBContext))]
    [Migration("20210816094504_AuthorEntityAndData")]
    partial class AuthorEntityAndData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TaskAPI.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FullName = "Lahiru Madushanka"
                        },
                        new
                        {
                            Id = 2,
                            FullName = "Manoshi Ramanayake"
                        },
                        new
                        {
                            Id = 3,
                            FullName = "Nansara Piyumal"
                        },
                        new
                        {
                            Id = 4,
                            FullName = "Nimal Premarathne"
                        });
                });

            modelBuilder.Entity("TaskAPI.Models.Todo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Due")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Todos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            Created = new DateTime(2021, 8, 16, 15, 15, 3, 981, DateTimeKind.Local).AddTicks(6141),
                            Description = "Get some text books for school",
                            Due = new DateTime(2021, 8, 21, 15, 15, 3, 982, DateTimeKind.Local).AddTicks(829),
                            Status = 0,
                            Title = "Get books for School - DB "
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 1,
                            Created = new DateTime(2021, 8, 16, 15, 15, 3, 982, DateTimeKind.Local).AddTicks(2555),
                            Description = "Get vegetable for week",
                            Due = new DateTime(2021, 8, 18, 15, 15, 3, 982, DateTimeKind.Local).AddTicks(2563),
                            Status = 0,
                            Title = "Get vegetable"
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 2,
                            Created = new DateTime(2021, 8, 16, 15, 15, 3, 982, DateTimeKind.Local).AddTicks(2575),
                            Description = "Water all the plants quickly",
                            Due = new DateTime(2021, 8, 17, 15, 15, 3, 982, DateTimeKind.Local).AddTicks(2576),
                            Status = 0,
                            Title = "Water the plants"
                        });
                });

            modelBuilder.Entity("TaskAPI.Models.Todo", b =>
                {
                    b.HasOne("TaskAPI.Models.Author", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });
#pragma warning restore 612, 618
        }
    }
}
